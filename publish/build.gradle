plugins {
    id 'maven-publish'
    id 'signing'
}

def coreProject = tasks.getByPath(':core:jar').project
if (enablePublishing.toBoolean()) {
    publishing {
        publications {
            lib(MavenPublication) {
                artifactId = 'print-lib'
                from coreProject.components.java
                artifact tasks.getByPath(':core:libSourcesJar')
                artifact tasks.getByPath(':core:libJavadocJar')
                setPom(pom)
                pom {
                    name = 'print-lib'
                    packaging = 'jar'
                    description = 'Library for generating PDFs and images from online webmapping services'
                }
            }
            servlet(MavenPublication) {
                artifactId = 'print-servlet'
                from coreProject.components.web
                //artifact tasks.getByPath(':core:war')
                setPom(pom)
                pom {
                    name = 'print-servlet'
                    packaging = 'war'
                    description = 'Web application for generating PDFs and images from online webmapping services'
                }
            }
            standalone(MavenPublication) {
                artifactId = 'print-standalone'
                artifact tasks.getByPath(':core:distZip')
                setPom(pom)
                pom {
                    name = 'print-cli'
                    packaging = 'zip'
                    description = 'Application for generating PDFs and images from online webmapping services. All dependencies are included'
                }
            }
        }

        repositories {
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/mapfish/mapfish-print")
                credentials(HttpHeaderCredentials) {
                    name = "authorization"
                    value = "Bearer " + System.getenv("GITHUB_TOKEN")
                }
                authentication {
                    header(HttpHeaderAuthentication)
                }
            }
        }
    }

    signing {
        sign publishing.publications.lib
        sign publishing.publications.servlet
        sign publishing.publications.standalone
        useInMemoryPgpKeys(new File('CI.asc').text, "")
    }
}

/**
 * Set some common values on the given POM
 */
private void setPom(org.gradle.api.publish.maven.MavenPom pom) {
    pom.url = 'https://mapfish.github.io/mapfish-print'

    pom.scm {
        url = 'scm:git@github.com:mapfish/mapfish-print.git'
        connection = 'scm:git@github.com:mapfish/mapfish-print.git'
        developerConnection = 'scm:git@github.com:mapfish/mapfish-print.git'
    }

    pom.licenses {
        license {
            name = 'BSD 2-Clause License'
            url = 'https://opensource.org/licenses/BSD-2-Clause'
            distribution = 'repo'
        }
    }

    pom.developers {
        developer {
            id = 'jesseeichar'
            name = 'Jesse Eichar'
        }
        developer {
            id = 'sbrunner'
            name = 'St√©phane Brunner'
        }
        developer {
            id = 'tsauerwein'
            name = 'Tobias Sauerwein'
        }
        developer {
            id = 'geekdenz'
            name = 'Tim-Hinnerk Heuer'
        }
        developer {
            id = 'miblon'
            name = 'Milo van der Linden'
        }
        developer {
            id = 'pvalsecc'
            name = 'Patrick Valsecchi'
        }
    }
    pom.mailingLists {
        mailingList {
            name = 'Users'
            subscribe = 'mapfish-print-users+subscribe@googlegroups.com'
            unsubscribe = 'mapfish-print-users+unsubscribe@googlegroups.com'
            post = 'mapfish-print-users@googlegroups.com'
            archive = 'https://groups.google.com/forum/#!forum/mapfish-print-users'
        }
    }
}
